# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project, GKE_EMAIL with the service account email, GKE_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, REGISTRY_HOSTNAME and DEPLOYMENT_NAME environment variables (below).

name: Build and Deploy to GKE

on:
  push:
    branches:
    - master

# Environment variables available to all jobs and steps in this workflow
env:
  CLOUDSDK_CORE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: us-west1-a
  GKE_CLUSTER: cf-for-k8s-ciriarte
  DNS_DOMAIN: cf-for-k8s-ciriarte.sandbox.gcp.releng.cf-app.com
  DNS_ZONE_NAME: sandbox

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '279.0.0'
        service_account_email: ${{ secrets.GKE_EMAIL }}
        service_account_key: ${{ secrets.GKE_KEY }}

    - name: Deploy
      run: |
        wget -O- https://k14s.io/install.sh | sudo bash
        mkdir -p "${HOME}/bin"
        wget https://github.com/cloudfoundry/bosh-cli/releases/download/v6.2.1/bosh-cli-6.2.1-linux-amd64 -O "bosh"
        chmod +x "bosh"
        sudo mv bosh /usr/local/bin/bosh 
        gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $GKE_PROJECT
        kapp delete -a cf --yes
        echo "Generating install values..."
        ./hack/generate-values.sh "${DNS_DOMAIN}" > cf-install-values.yml
        echo "Installing CF..."
        ./bin/install-cf.sh cf-install-values.yml
        echo "Configuring DNS..."
        ./hack/update-gcp-dns.sh "${DNS_DOMAIN}" "${DNS_ZONE_NAME}"

    - name: Smoke Tests
      run: |
        wget -O "cf-tar" "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=6.49.0"
        sudo tar xzvf cf-tar -C /usr/local/bin
        sudo chmod +x /usr/local/bin/cf
        go get github.com/onsi/ginkgo/ginkgo
        go get github.com/onsi/gomega/...        
        export PATH="$(go env GOPATH)/bin:$PATH"
        export SMOKE_TEST_API_ENDPOINT="https://api.${DNS_DOMAIN}"
        export SMOKE_TEST_APPS_DOMAIN="${DNS_DOMAIN}"
        export SMOKE_TEST_USERNAME=admin
        export SMOKE_TEST_PASSWORD="$(bosh interpolate --path /cf_admin_password cf-install-values.yml)"
        ./hack/run-smoke-tests.sh
